// ====================================================================
// DO NOT EDIT THIS FILE. IT HAS BEEN AUTO-GENERATED BY PERSISTINATOR. 
// YOUR CHANGES WILL BE LOST NEXT TIME THE CODE IS GENERATED!
// ====================================================================
package ${daoPackageName};

import ${voPackageName}.${voClassName};

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;

import java.sql.*;
import javax.naming.*;
import javax.sql.DataSource;
import org.apache.log4j.Logger;

/**
 * @author DaoGen
 * @version cvs: $Id: ProcedureDaoImplTemplate.vm,v 1.1 2008/03/31 20:01:28 ran488 Exp $
 * 
 */
public class ${daoImplClassName}
  extends BaseDao
  implements ${daoInterfaceName}
{
	protected Connection _conn;
		
	protected final static Logger log = Logger.getLogger( ${daoImplClassName}.class );


	/** Constructor */
	public ${daoImplClassName}() throws NamingException, SQLException
	{
		super();
		this._conn = ResourceManager.getConnection();
	}

	/**
	 * Construct the DAO with given connection
	 */
	public ${daoImplClassName}(Connection conn)
	{
		super();	
		this._conn = conn;
	}


	/** FIXME: For now this just handles simple stored proc with IN params only 
	 * and no out or inout, no returned results set or anything
	 */
    public int execute(
#foreach( $field in  $inFields )	
		#if( $velocityCount > 1 ) , #end $field.javaType  $field.jFieldName
#end
    ) throws SQLException
    {
		long start = System.currentTimeMillis();
		CallableStatement cs = null;
		int rc = -1;
			
		try
		{
			int ii = 1;
			cs = _conn.prepareCall( "{call $schema.$procName(#foreach( $field in  $inFields )#if( $velocityCount > 1 ), #end ? #end )}" );
#foreach( $field in  $inFields )	
			cs.set${field.psMethodNameFrag}( ii++ , ${field.jFieldName} );
#end
			cs.execute();
			long end = System.currentTimeMillis();
			log.debug( "Stored Procedure execution took (" + (start-end) + " milliseconds)");
			
		}
		finally
		{
			ResourceManager.close(cs);
			ResourceManager.close(_conn);
		}
	
		return rc;

    }
}
