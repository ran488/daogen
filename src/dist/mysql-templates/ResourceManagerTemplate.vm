// ====================================================================
// DO NOT EDIT THIS FILE. IT HAS BEEN AUTO-GENERATED BY DAO-GEN. 
// YOUR CHANGES WILL BE LOST NEXT TIME THE CODE IS GENERATED!
// ====================================================================

package ${daoPackageName};

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

import javax.naming.InitialContext;
import javax.naming.NamingException;
import javax.sql.DataSource;

public class ResourceManager
{
	/** you must customize this to use JNDI lookup for datasource.
	 ** if you don't use JNDI lookups to get Datasource, you will need
	 ** to customize getConnection() method for your environment.
         **
         */
	private final static String DATA_SRC_JNDI_NAME = "<<your datasource binding here>>";
	
	/** customize me if you choose to not use JNDI-bound DataSource */
	public static synchronized Connection getConnection()
	throws NamingException, SQLException
	{
            InitialContext ic = null;
            DataSource ds = null;
            Connection conn = null;
            try
            {
        	ic = new InitialContext();
			ds = (DataSource)ic.lookup( DATA_SRC_JNDI_NAME );
                conn = ds.getConnection();
            }
            catch (Exception sle)
            {
                sle.printStackTrace();
                throw new NamingException(sle.getMessage());
            }

            return conn;
	}


	public static void close(Connection conn)
	{
		try {
			if (conn != null) conn.close();
		}
		catch (SQLException sqle)
		{
			sqle.printStackTrace();
		}
	}

	public static void close(PreparedStatement stmt)
	{
		try {
			if (stmt != null) stmt.close();
		}
		catch (SQLException sqle)
		{
			sqle.printStackTrace();
		}
	}

	public static void close(ResultSet rs)
	{
		try {
			if (rs != null) rs.close();
		}
		catch (SQLException sqle)
		{
			sqle.printStackTrace();
		}
	}
}
