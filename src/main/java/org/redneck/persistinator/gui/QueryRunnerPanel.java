/*
 * QueryRunnerPanel.java
 *
 * Created on December 11, 2006, 4:38 PM
 */

package org.redneck.persistinator.gui;

import javax.swing.*;

import org.redneck.persistinator.log.SimpleLogger;
import org.redneck.persistinator.util.QueryRunner;


/**
 *
 * @author  ran488
 */
public class QueryRunnerPanel extends javax.swing.JPanel
{
    java.awt.Component parent = null;
    
    /** Creates new form QueryRunnerPanel */
    public QueryRunnerPanel()
    {
        initComponents();
    }

    /** Creates new form QueryRunnerPanel */
    public QueryRunnerPanel(java.awt.Component parent)
    {
        this.parent = parent;
        initComponents();
    }


    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents()
    {
        jScrollPane1 = new javax.swing.JScrollPane();
        queryPanel = new javax.swing.JEditorPane();
        buttonPanel = new javax.swing.JPanel();
        clearButton = new javax.swing.JButton();
        runButton = new javax.swing.JButton();

        setLayout(new java.awt.BorderLayout());

        queryPanel.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyTyped(java.awt.event.KeyEvent evt)
            {
                queryPanelKeyTyped(evt);
            }
        });

        jScrollPane1.setViewportView(queryPanel);

        add(jScrollPane1, java.awt.BorderLayout.CENTER);

        clearButton.setMnemonic('l');
        clearButton.setText("Clear");
        clearButton.setToolTipText("Clears the query input area");
        clearButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                clearButtonActionPerformed(evt);
            }
        });

        buttonPanel.add(clearButton);

        runButton.setMnemonic('Q');
        runButton.setText("Execute Query");
        runButton.setToolTipText("Run the current query");
        runButton.setEnabled(false);
        runButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                runButtonActionPerformed(evt);
            }
        });

        buttonPanel.add(runButton);

        add(buttonPanel, java.awt.BorderLayout.SOUTH);

    }// </editor-fold>//GEN-END:initComponents

    private void queryPanelKeyTyped(java.awt.event.KeyEvent evt)//GEN-FIRST:event_queryPanelKeyTyped
    {//GEN-HEADEREND:event_queryPanelKeyTyped
        if (!runButton.isEnabled())
            runButton.setEnabled(true);
    }//GEN-LAST:event_queryPanelKeyTyped
    
    private void runButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_runButtonActionPerformed
    {//GEN-HEADEREND:event_runButtonActionPerformed
        // take the Connection info from Config panel and run the query
        String contents = (queryPanel.getSelectedText() != null) ? queryPanel.getSelectedText() : queryPanel.getText();
        if ((contents == null) || (contents.trim().equals("")))
        {
            JOptionPane.showMessageDialog(this, "No query to run.", "Error", JOptionPane.WARNING_MESSAGE);
        }
        else
        {
            ProjectInfo prjInfo = ((DaoGeneratorGui)parent).getProjectInfo();
            
            if (((DaoGeneratorGui)parent).isPopulated("JDBC Driver", prjInfo.getJdbcDriver()) &&
                    ((DaoGeneratorGui)parent).isPopulated("JDBC Url", prjInfo.getJdbcUrl()) &&
                    ((DaoGeneratorGui)parent).isPopulated("Username", prjInfo.getUserName()) &&
                    ((DaoGeneratorGui)parent).isPopulated("Password", prjInfo.getPassword()))
            {
                //run the query, put results in the output tab
                SimpleLogger.log("Running query: " + contents.trim());
                ((DaoGeneratorGui)parent).switchToOutputTab();
                QueryRunner qr = new QueryRunner(prjInfo.getJdbcDriver());
                qr.setDbUrl(prjInfo.getJdbcUrl());
                qr.setPassword(prjInfo.getPassword());
                qr.setUserName(prjInfo.getUserName());
                try
                {
                    qr.runQuery(contents);
                }
                catch (Exception e)
                {
                    JOptionPane.showMessageDialog(this, "Query failed due to an exception: " + e.toString(), "Error", JOptionPane.WARNING_MESSAGE);
                }
            }
            else
            {
                ((DaoGeneratorGui)parent).switchToConfigTab();
            }
        }
    }//GEN-LAST:event_runButtonActionPerformed

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_clearButtonActionPerformed
    {//GEN-HEADEREND:event_clearButtonActionPerformed
        queryPanel.setText("");
        runButton.setEnabled(false);
    }//GEN-LAST:event_clearButtonActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel buttonPanel;
    private javax.swing.JButton clearButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JEditorPane queryPanel;
    private javax.swing.JButton runButton;
    // End of variables declaration//GEN-END:variables
    
}
