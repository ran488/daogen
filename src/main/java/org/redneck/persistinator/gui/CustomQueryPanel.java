/*
 * CustomQueryPanel.java
 *
 * Created on December 11, 2006, 4:37 PM
 */

package org.redneck.persistinator.gui;

import java.util.Iterator;
import javax.swing.table.TableColumn;

import org.redneck.persistinator.gui.models.ParamTableModel;
import org.redneck.persistinator.gui.models.ParamTypeCellEditor;
import org.redneck.persistinator.meta.AbstractTable;
import org.redneck.persistinator.meta.Procedure;
import org.redneck.persistinator.meta.Table;
import org.redneck.persistinator.meta.userdef.CustomMethod;

/**
 * What's needed here? Need to show existing custom queries if there are any
 * with ability to delete or update them.
 * Obviously need to be able to add new methods as well.
 * Should have a "custom method" object with all the params names/types (or columns!) and query or where clause or method contents etc.
 * Support for just where clause, full query, full method code?
 *
 * @author  ran488
 */
public class CustomQueryPanel extends javax.swing.JPanel
{
    private DaoGeneratorGui parent = null;
    private AbstractTable o = null;
    
    
    /** Creates new form CustomQueryPanel 
     * Object o should be Table or Procedure - should be more typesafe than this
     * but screw it for now.
     */
    public CustomQueryPanel(DaoGeneratorGui parent, AbstractTable o)
    {
        this.parent = parent;
        this.o = o;
        initComponents();
    }
    
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        mainContentPanel = new javax.swing.JPanel();
        jSplitPane1 = new javax.swing.JSplitPane();
        upperSplitPane = new javax.swing.JSplitPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableInfoTextArea = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        methodsList = new javax.swing.JList(getAllCustomMethods());
        jScrollPane2 = new javax.swing.JScrollPane();
        mainEditingPanel = new javax.swing.JPanel();
        inputFieldsPanel = new javax.swing.JPanel();
        methodNamePanel = new javax.swing.JPanel();
        methodNameLabel = new javax.swing.JLabel();
        methodNameInput = new javax.swing.JTextField();
        paramsPanel = new javax.swing.JPanel();
        paramsLabel = new javax.swing.JLabel();
        ParamsScrollPanel = new javax.swing.JScrollPane();
        paramsTable = new javax.swing.JTable();
        paramsBtnPanel = new javax.swing.JPanel();
        addRowBtn = new javax.swing.JButton();
        removeRowBtn = new javax.swing.JButton();
        whereClausePanel = new javax.swing.JPanel();
        whereClauseLabel = new javax.swing.JLabel();
        whereClauseScrollPanel = new javax.swing.JScrollPane();
        whereClauseInput = new javax.swing.JEditorPane();
        buttonPanel = new javax.swing.JPanel();
        closeTabButton = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        addParamBtn = new javax.swing.JButton();
        removeParamBtn = new javax.swing.JButton();
        saveBtn = new javax.swing.JButton();
        updateButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();

        setLayout(new java.awt.BorderLayout());

        mainContentPanel.setLayout(new java.awt.BorderLayout());

        jSplitPane1.setDividerLocation(120);
        jSplitPane1.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);
        jSplitPane1.setOneTouchExpandable(true);
        upperSplitPane.setOneTouchExpandable(true);
        upperSplitPane.setPreferredSize(new java.awt.Dimension(100, 150));
        jScrollPane1.setBorder(null);
        tableInfoTextArea.setColumns(30);
        tableInfoTextArea.setEditable(false);
        tableInfoTextArea.setRows(9);
        tableInfoTextArea.setText(getTableOrProcInfo(o));
        jScrollPane1.setViewportView(tableInfoTextArea);

        upperSplitPane.setLeftComponent(jScrollPane1);

        jScrollPane3.setName("methodsList");
        methodsList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane3.setViewportView(methodsList);

        upperSplitPane.setRightComponent(jScrollPane3);

        jSplitPane1.setLeftComponent(upperSplitPane);

        mainEditingPanel.setLayout(new java.awt.BorderLayout());

        inputFieldsPanel.setLayout(new java.awt.GridBagLayout());

        methodNameLabel.setLabelFor(methodNameInput);
        methodNameLabel.setText("Method Name");
        methodNamePanel.add(methodNameLabel);

        methodNameInput.setColumns(20);
        methodNameInput.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                methodNameInputKeyTyped(evt);
            }
        });

        methodNamePanel.add(methodNameInput);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        inputFieldsPanel.add(methodNamePanel, gridBagConstraints);

        paramsPanel.setLayout(new java.awt.BorderLayout());

        paramsLabel.setLabelFor(paramsTable);
        paramsLabel.setText("Method Parameters");
        paramsPanel.add(paramsLabel, java.awt.BorderLayout.NORTH);

        ParamsScrollPanel.setMaximumSize(new java.awt.Dimension(200, 400));
        ParamsScrollPanel.setPreferredSize(new java.awt.Dimension(100, 80));
        paramsTable.setModel(new ParamTableModel(this.o, new CustomMethod()));
        paramsTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        //CUSTOM ran488
        TableColumn typeCol = paramsTable.getColumnModel().getColumn(1);
        typeCol.setCellEditor(new ParamTypeCellEditor());
        //END CUSTOM ran488
        ParamsScrollPanel.setViewportView(paramsTable);

        paramsPanel.add(ParamsScrollPanel, java.awt.BorderLayout.CENTER);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        inputFieldsPanel.add(paramsPanel, gridBagConstraints);

        addRowBtn.setText("+");
        addRowBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addRowBtnActionPerformed(evt);
            }
        });

        paramsBtnPanel.add(addRowBtn);

        removeRowBtn.setText("-");
        paramsBtnPanel.add(removeRowBtn);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        inputFieldsPanel.add(paramsBtnPanel, gridBagConstraints);

        mainEditingPanel.add(inputFieldsPanel, java.awt.BorderLayout.WEST);

        whereClausePanel.setLayout(new java.awt.BorderLayout());

        whereClauseLabel.setLabelFor(whereClauseInput);
        whereClauseLabel.setText("Where Clause");
        whereClauseLabel.setToolTipText("Use binding of :paramname");
        whereClausePanel.add(whereClauseLabel, java.awt.BorderLayout.NORTH);

        whereClauseInput.setText("WHERE col1 = :binding");
        whereClauseScrollPanel.setViewportView(whereClauseInput);

        whereClausePanel.add(whereClauseScrollPanel, java.awt.BorderLayout.CENTER);

        mainEditingPanel.add(whereClausePanel, java.awt.BorderLayout.CENTER);

        jScrollPane2.setViewportView(mainEditingPanel);

        jSplitPane1.setRightComponent(jScrollPane2);

        mainContentPanel.add(jSplitPane1, java.awt.BorderLayout.CENTER);

        add(mainContentPanel, java.awt.BorderLayout.CENTER);

        closeTabButton.setText("Close Tab");
        closeTabButton.setToolTipText("Closes this current tab when finished with it");
        closeTabButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeTabButtonActionPerformed(evt);
            }
        });

        buttonPanel.add(closeTabButton);

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);
        buttonPanel.add(jSeparator1);

        addParamBtn.setText("Add Param");
        addParamBtn.setEnabled(false);
        addParamBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addParamBtnActionPerformed(evt);
            }
        });

        buttonPanel.add(addParamBtn);

        removeParamBtn.setText("Remove Param");
        removeParamBtn.setEnabled(false);
        removeParamBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeParamBtnActionPerformed(evt);
            }
        });

        buttonPanel.add(removeParamBtn);

        saveBtn.setText("Save Method");
        saveBtn.setToolTipText("Adds new custom method");
        saveBtn.setEnabled(false);
        saveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveBtnActionPerformed(evt);
            }
        });

        buttonPanel.add(saveBtn);

        updateButton.setText("Update Method");
        updateButton.setToolTipText("Updates current method");
        updateButton.setEnabled(false);
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        buttonPanel.add(updateButton);

        deleteButton.setText("Delete Method");
        deleteButton.setToolTipText("Deletes current custom method");
        deleteButton.setEnabled(false);
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        buttonPanel.add(deleteButton);

        add(buttonPanel, java.awt.BorderLayout.SOUTH);

    }// </editor-fold>//GEN-END:initComponents

    private void addRowBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addRowBtnActionPerformed
        //add a row to table
    }//GEN-LAST:event_addRowBtnActionPerformed

    private void methodNameInputKeyTyped(java.awt.event.KeyEvent evt)//GEN-FIRST:event_methodNameInputKeyTyped
    {//GEN-HEADEREND:event_methodNameInputKeyTyped
// TODO make sure it's not blank and then create new method and enable buttons for adding params
        String newVal = this.methodNameInput.getText();
        if (!"".equals(newVal))
        {
            //enable buttons
        }
    }//GEN-LAST:event_methodNameInputKeyTyped

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_deleteButtonActionPerformed
    {//GEN-HEADEREND:event_deleteButtonActionPerformed
// TODO figure out selection in method table and remove it
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void removeParamBtnActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_removeParamBtnActionPerformed
    {//GEN-HEADEREND:event_removeParamBtnActionPerformed
// TODO figure out current selection in param table and remove it
        
    }//GEN-LAST:event_removeParamBtnActionPerformed

    private void addParamBtnActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_addParamBtnActionPerformed
    {//GEN-HEADEREND:event_addParamBtnActionPerformed
// TODO add new param to table
        
        
    }//GEN-LAST:event_addParamBtnActionPerformed

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_updateButtonActionPerformed
    {//GEN-HEADEREND:event_updateButtonActionPerformed
// TODO add your handling code here:
    }//GEN-LAST:event_updateButtonActionPerformed

    private void saveBtnActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_saveBtnActionPerformed
    {//GEN-HEADEREND:event_saveBtnActionPerformed
// take the current table of params and method name and save it to this table object
    }//GEN-LAST:event_saveBtnActionPerformed

    private void closeTabButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_closeTabButtonActionPerformed
    {//GEN-HEADEREND:event_closeTabButtonActionPerformed
        parent.closeCustomQueryTab(this);
    }//GEN-LAST:event_closeTabButtonActionPerformed
    
    private String getTableOrProcInfo(AbstractTable o)
    {
        java.util.List cols;
        
        StringBuffer sb = new StringBuffer();
        sb.append(o.toString());
        if (o.isTable())
        {
           cols = ((Table)o).getColumns();
        }
        else
        {
            cols = ((Procedure)o).getProcColumns();
        }
        
        Iterator itx = cols.iterator();
        while (itx.hasNext())
        {
            sb.append("\n + ");
            sb.append(itx.next().toString());
        }
        
        return sb.toString();
    }
    
    private java.util.Vector getAllCustomMethods()
    {
        //TODO implement by getting them off table or proc object
        java.util.Vector ret = new java.util.Vector();
        ret.add("findBySearchCriteria");
        ret.add("findByDateRange");
        ret.add("findBySomethingElse");
        return ret;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane ParamsScrollPanel;
    private javax.swing.JButton addParamBtn;
    private javax.swing.JButton addRowBtn;
    private javax.swing.JPanel buttonPanel;
    private javax.swing.JButton closeTabButton;
    private javax.swing.JButton deleteButton;
    private javax.swing.JPanel inputFieldsPanel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JPanel mainContentPanel;
    private javax.swing.JPanel mainEditingPanel;
    private javax.swing.JTextField methodNameInput;
    private javax.swing.JLabel methodNameLabel;
    private javax.swing.JPanel methodNamePanel;
    private javax.swing.JList methodsList;
    private javax.swing.JPanel paramsBtnPanel;
    private javax.swing.JLabel paramsLabel;
    private javax.swing.JPanel paramsPanel;
    private javax.swing.JTable paramsTable;
    private javax.swing.JButton removeParamBtn;
    private javax.swing.JButton removeRowBtn;
    private javax.swing.JButton saveBtn;
    private javax.swing.JTextArea tableInfoTextArea;
    private javax.swing.JButton updateButton;
    private javax.swing.JSplitPane upperSplitPane;
    private javax.swing.JEditorPane whereClauseInput;
    private javax.swing.JLabel whereClauseLabel;
    private javax.swing.JPanel whereClausePanel;
    private javax.swing.JScrollPane whereClauseScrollPanel;
    // End of variables declaration//GEN-END:variables
    
}
